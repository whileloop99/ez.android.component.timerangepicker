apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

group = 'ez.android.ui'
version = '1.0.0'

ext {
    compileSdkVer = 28
    minSdkVer = 17
    targetSdkVer = 28

    versionCode = 1
    versionName = project.version

    // Kotlin
    kotlinVer = '1.3.10'
    androidKtxVer = '1.0.0'

    // AndroidX
    appCompatVer = '1.0.2'
    legacyVer = '1.0.0'
    materialVer = '1.0.0'
    cardViewVer = '1.0.0'
    recyclerViewVier = '1.0.0'
    constraintLayout = '1.1.3'
    archComponentsTestVer = '2.0.0'

    coreRuntimeVer = "2.0.1-alpha01"

    // MultiDex
    multiDexVer = '2.0.0'

    // Developer-related
    timberVer = '4.7.1'
    threetenVer = '1.1.0'


    // Unit-tests
    jUnitVer = '4.12'
    mockitoVer = '2.15.0'
    mockitoKotlinVer = '1.5.0'
    mockitoAndroidVer = '2.23.0'
    assertJVer = '3.9.0'
    dataProviderVer = '2.3'

    // Instrumentation tests
    runnerVer = '1.1.0-alpha4'
    espressoCoreVer = '3.1.0-alpha4'
    annotationsVer = '1.0.0-beta01'
    coreTestingVer = '2.0.0-alpha1'

    // Dependencies
    supportDependencies = [
            appCompat       : "androidx.appcompat:appcompat:$appCompatVer",
            support         : "androidx.legacy:legacy-support-v4:$legacyVer",
            design          : "com.google.android.material:material:$materialVer",
            cardView        : "androidx.cardview:cardview:$cardViewVer",
            recyclerView    : "androidx.recyclerview:recyclerview:$recyclerViewVier",
            constraintLayout: "androidx.constraintlayout:constraintlayout:$constraintLayout",
            multiDex        : "androidx.multidex:multidex:$multiDexVer",
            coreRuntime     : "androidx.arch.core:core-runtime:$coreRuntimeVer"
    ]

    kotlinDependencies = [
            kotlinStdLib : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVer",
            kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlinVer",
            androidKtx   : "androidx.core:core-ktx:$androidKtxVer"
    ]

    developmentDependencies = [
            timber        : "com.jakewharton.timber:timber:$timberVer",
            threeten            : "com.jakewharton.threetenabp:threetenabp:$threetenVer",
    ]

    testDependencies = [
            jUnit             : "junit:junit:$jUnitVer",
            mockito           : "org.mockito:mockito-core:$mockitoVer",
            mockitoKotlin     : "com.nhaarman:mockito-kotlin:$mockitoKotlinVer",
            mockitoAndroid    : "org.mockito:mockito-android:$mockitoAndroidVer",
            assertJ           : "org.assertj:assertj-core:$assertJVer",
            mockitoInline     : "org.mockito:mockito-inline:$mockitoVer",
            dataProvider      : "com.tngtech.junit.dataprovider:junit4-dataprovider:$dataProviderVer",
            archComponentsTest: "androidx.arch.core:core-testing:$archComponentsTestVer"
    ]

    androidTestDependencies = [
            testRunner        : "androidx.test:runner:$runnerVer",
            espressoCore      : "androidx.test.espresso:espresso-core:$espressoCoreVer",
            testRules         : "androidx.test:rules:$runnerVer",
            supportAnnotations: "androidx.annotation:annotation:$annotationsVer",
            testArchCore      : "androidx.arch.core:core-testing:$coreTestingVer"
    ]
}


def libraryVersionName = versionName


android {
    defaultConfig {
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        compileSdkVersion compileSdkVer
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation kotlinDependencies.kotlinStdLib
    implementation kotlinDependencies.androidKtx
    implementation kotlinDependencies.kotlinReflect

    implementation supportDependencies.appCompat

    // Timber
    implementation developmentDependencies.timber
    implementation developmentDependencies.threeten


    // Testing
    testImplementation testDependencies.jUnit
    testImplementation testDependencies.mockito
    testImplementation testDependencies.mockitoKotlin
    testImplementation testDependencies.assertJ
    testImplementation testDependencies.dataProvider

    implementation 'com.google.android.material:material:1.3.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
